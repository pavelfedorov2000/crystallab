.btn {
	$this: &;

	padding: 0;
	cursor: pointer;
    display: inline-flex;
    align-items: center;
    border: none;
	font-family: var(--main-font);
	transition: color var(--transition);
	color: currentColor;

	&.disabled,
	&[disabled] {
		border: none;
		cursor: not-allowed;

		@media (any-hover: hover) {
			&:hover {
				color: var(--white);
			}
		}
	}

	svg,
	.icon,
	&__icon {
		flex-shrink: 0;
	}

	&__text {
        position: relative;
        z-index: 3;
    }

    &__shadow {
        --shadow-offset: var(--offset-m);

        position: absolute;
        z-index: -1;
        top: var(--shadow-offset);
        right: calc(var(--shadow-offset) * (-1));
        bottom: calc(var(--shadow-offset) * (-1));
        left: var(--shadow-offset);
        border-radius: px2rem(100);
        opacity: var(--opacity-60);
        background: linear-gradient(90deg, var(--pink) 0%, #73BCFF 100%);
        filter: blur(px2rem(30));

        @include media('767', max) {
            --shadow-offset: var(--offset-s);
        }
    }

	&--primary {
        position: relative;
        padding: px2rem(9) var(--offset-s);
		background: var(--button-bg);
		color: var(--white);
        font-size: px2rem(14);
        font-weight: 600;

        &::before,
        &::after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: 1;
            @include hide();
            transition: var(--transition) all;
        }

        &::before {
            background: var(--button-bg-hover);
        }

        &::after {
            background: var(--button-bg-pressed);
        }

        @media (any-hover: hover) {
            &:hover {
                &::before {
                    @include show();
                }
            }
        }

        &:focus,
        &:active {
            &::before {
                @include hide();
            }

            &::after {
                @include show();
            }
        }
	}

	&--style {
		&_tab {
            padding-bottom: var(--offset-xl);
            border-bottom: var(--border-width) var(--border-style) var(--white);
            color: var(--white);
            font-weight: 600;
            transition: var(--transition) color, var(--transition) border-bottom-color;

            #{$this} {
                &__icon {
                    margin-right: var(--offset-l);
                }
            }

            &.active {
                color: var(--pink);
                border-bottom-color: var(--pink);
            }

            @media (any-hover: hover) {
                &:hover {
                    color: var(--pink);
                    border-bottom-color: var(--pink);
                }
            }
        }

		&_link {
            font-size: px2rem(14);
            font-weight: 600;
            color: var(--accent);

            @media (any-hover: hover) {
                &:hover {
                    #{$this}__text {
                        text-decoration: underline;
                    }
                }
            }
        }
	}

    &--size {
        &_l {
            padding: var(--offset-s) var(--offset-l);
        }

        &_xl {
            padding: px2rem(43) px2rem(100);
            border-radius: px2rem(200);
            font-size: px2rem(28);

            @include media('767', max) {
                padding: var(--offset-l);
                font-size: px2rem(24);
            }

            @include media('500', max) {
                width: 100%;
                justify-content: center;
            }

            &::before,
            &::after {
                border-radius: px2rem(200);
            }
        }
    }

	&--transparent {
		background-color: transparent;

		@media (any-hover: hover) {
			&:hover {
				background-color: transparent;
			}
		}
	}
}

.btns {
    display: flex;
    flex-wrap: wrap;
    gap: var(--offset-s) var(--offset-l);

    &--links {
        gap: var(--offset-xxs) var(--offset-m);
    }

    &--tabs {
        display: grid;
        gap: var(--gap);

        @include media('768', min) {
            grid-template-columns: repeat(2, 1fr);
        }

        @include media('1101', min) {
            grid-template-columns: repeat(3, 1fr);
        }
    }
}

.filter-btns {
    padding-bottom: px2rem(35);

    &__item {
        &.active {
            color: var(--black);
        }
    }
}